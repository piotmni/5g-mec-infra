---
- name: Register the current Go version
  command: "{{ golang_install_dir }}/go/bin/go version"
  ignore_errors: yes
  register: go_version
  changed_when: false

- name: delete existing go if it's different version
  file:
    path: "{{ golang_install_dir }}/go"
    state: absent
  when: (go_version.stdout is defined) and (go_version.stdout != golang_version_string )

- name: Check that the golang tar exists
  stat:
    path: "/opt/{{ golang_tarball }}"
  register: golang_tar

- name: Install | Download the Go tarball
  get_url:
    url: "{{ golang_download_location }}"
    dest: "/opt"
  when: not golang_tar.stat.exists

- name: Extract the Go tarball
  unarchive:
    src: "/opt/{{ golang_tarball }}"
    dest: "{{ golang_install_dir }}"
    remote_src: yes
    creates: "{{ golang_install_dir }}/go"

- name: set default env vars for all users
  ansible.builtin.lineinfile:
    path: /etc/bash.bashrc
    line: "{{ item }}"
  loop:
    - "export GOPATH=$HOME/go"
    - "export GOROOT={{ golang_install_dir }}/go"
    - "export PATH=$PATH:$GOPATH/bin:$GOROOT/bin"

#    echo 'export GOPATH=$HOME/go' >> ~/.bashrc
#    echo 'export GOROOT=/usr/local/go' >> ~/.bashrc
#    echo 'export PATH=$PATH:$GOPATH/bin:$GOROOT/bin' >> ~/.bashrc